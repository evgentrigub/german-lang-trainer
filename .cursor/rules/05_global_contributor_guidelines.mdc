---
description: 
globs: 
alwaysApply: true
---
# 05 – Global Contributor Guidelines

This file sets overarching principles for **all** team members (engineering, design, PM, AI pair-programmers).

## Investigation & Rigor
- Analyse every task thoroughly; leverage search, grep, Context7 docs, and logs before coding.
- Treat `README_PRD.txt` as a living contract—review before each new feature and update progress.
- Prioritise **simple, elegant** solutions; avoid over-engineering.

## File Size & Refactoring
- Code files > 500 LOC must be split & refactored during the same PR.
- Large React components should be decomposed into smaller hooks/atoms.

## Documentation & Commenting
- Write concise, efficient code **AND** document intent.
- Follow comment rules:
  - Clear, succinct language; reveal the *why*/*how* rather than obvious *what*.
  - Single-line `//` for quick notes, multi-line `/** ... */` JSDoc for exports.
  - Do not erase still-useful comments—revise when code evolves.

## External Knowledge & Context7
- When in doubt, pull latest docs using Context7 MCP (`/vercel/next.js@15.x` etc.).
- Validate library versions & breaking changes before upgrading.

## Workflow Expectations
- Every PR links to a PRD section or issue.
- Pre-merge checklist: lint ✓ type-check ✓ tests ✓ bundle-size ✓.
- Maintain main branch always deployable.

## Elegance Heuristics
- Clarity > cleverness: readable, predictable code wins.
- Favour composition over inheritance; hooks over mixins.
- If solution feels verbose, step back and seek a simpler pattern.

## AI Assistant Collaboration
- If scope pivots significantly, **update these rules** & notify the team.
- Assistants must question assumptions and propose alternatives when appropriate.
- Use all available tools to gather missing context before proceeding.

## Continuous Improvement
- Conduct fortnightly refactor & debt triage sessions.
- Retire unused code & dead features promptly.
- Keep dependencies lean; prefer native APIs first.
